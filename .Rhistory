install.packages("swirl")
q()
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir3")
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
q()
library(swirl)
ls
rm(list = ls())
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_eq <- seq(5, 10, length = 30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(myseq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0,1,2), each = 10)
q()
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sam")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
q()
install.packages("knitr")
install.packages("xtable")
setwd("D:/SuperSam/Coursera/Reproducible Research/Assignments/Week 2")
if(!file.exists("data")){
dir.create("data")
}
setwd("data")
getwd()
data_url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(data_url, destfile = "Activity monitoring data.zip", mode = "wb")
unzip("Activity monitoring data.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ",", na.strings = "NA")
head(data)
tail(data)
data <- read.csv("activity.csv", header = TRUE, sep = ",", na.strings = "NA", na.rm = TRUE)
data_table <- transform(data.frame(data))
head(data_table)
mean(data_table$steps, na.rm = TRUE)
hist(mean(data_table$steps, na.rm = TRUE))
str(data)
str(data_table)
data <- read.csv("activity.csv", header = TRUE, sep = ",", na.strings = "NA", colClass = c('integer', 'Date', 'integer'))
data_table <- transform(data.frame(data))
str(data_table)
total_daily_steps <- aggregate(data_table$steps ~ data_table$date, sum, na.rm = TRUE)
total_daily_steps <- aggregate(data_table$steps ~ data_table$date, sum(na.rm = TRUE))
total_daily_steps <- aggregate(data_table$steps ~ data_table$date, sum)
total_daily_steps <- aggregate(data_table$steps ~ data_table$date, data_table, sum)
head(total_daily_steps)
total_daily_steps <- aggregate(steps ~ date, data_table, sum)
head(total_daily_steps)
total_daily_steps <- aggregate(steps ~ date, data_table, sum, na.rm = TRUE)
head(total_daily_steps)
par(mfrow = c(1, 1))
hist(total_daily_steps)
hist(total_daily_steps$steps)
hist(total_daily_steps$steps, total_daily_steps$date, breaks = 25, main = "Total Number of Steps Daken Each Day")
barplot(total_daily_steps$steps, total_daily_steps$date, ylim=c(0, 25000),
xlab="date", ylab="sum(steps)")
barplot(total_daily_steps$steps, total_daily_steps$date, ylim=c(0, 25000),
xlab="date", ylab="sum(steps)",)
barplot(total_daily_steps$steps, names.arg = total_daily_steps$date, ylim=c(0, 25000),
xlab="date", ylab="sum(steps)")
barplot(total_daily_steps$steps, names.arg = total_daily_steps$date, ylim=c(0, 25000),
xlab="Date", ylab="Total Steps")
head(data_table)
steps_per_interval <- aggregate(steps ~ interval, data_table, mean)
plot(steps_per_interval, type='l')
plot(steps_per_interval, type='l', color = 'blue')
plot(steps_per_interval, type='l', col = 'green')
plot(steps_per_interval, type='l', col = 'gray')
plot(steps_per_interval, type='l', col = 'red')
plot(steps_per_interval, type = 'l', col = 'red')
plot(steps_per_interval, type = 'l', col = 'red')
plot(steps_per_interval, type = 'l', col = 'red',
main = "Time Series Plot of the 5-minute Interval and the Average Number of Steps Taken, Averaged Across All Days", xlab = "5-minute Interval",
ylab = "Average Number of Steps Taken")
head(data_table)
max(steps_per_interval$steps)
steps_per_interval$interval(max(steps_per_interval$steps))
steps_per_interval$interval[which.max(steps_per_interval$steps)]
sum(is.na(data_table))
data_without_na <- data_table
nas <- is.na(data_table)
interval_mean <- tapply(data_without_na, data_without_na$interval, mean, na.rm = TRUE)
interval_mean <- tapply(data_without_na$steps, data_without_na$interval, mean, na.rm = TRUE)
data_without_na[nas] <- interval_mean[as.character(data_without_na$interval[nas])]
sum(is.na(data_without_nas))
sum(is.na(data_without_na))
total_daily_steps2 <- aggregate(steps ~ date, data_without_na, sum)
par(mfrow = c(1, 1))
barplot(total_daily_steps2$steps, names.arg = total_daily_steps2$date, ylim=c(0, 25000), xlab="Dates", ylab="Total Steps")
mean(total_daily_steps2$steps)
median(total_daily_steps2$steps)
?sapply
for(i in 1:length(data_without_na$date)){
if(weekdays(data_without_na$date) %in% c("Saturday", "Sunday")){
day_type <- "Weekend"
cbind(day_type, data_without_na)
}else{
day_type <- "Weekdays"
cbind(day_type, data_without_na)
}
}
head(data_without_na)
day_type <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data_without_na$dayType <- as.factor(day_type(data_without_na$date))
head(data_without_na)
data_without_na$day_type <- as.factor(day_type(data_without_na$date))
head(data_without_na)
data_without_na$dayType <- NULL
head(data_without_na)
str(data_without_na)
xyplot(steps ~ interval | day_type, data = data_without_na, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
library(lattice)
xyplot(steps ~ interval | day_type, data = data_without_na, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
library(lattice)
xyplot(data_without_na$steps ~ data_without_na$interval | data_without_na$day_type, data = data_without_na, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
xyplot(data_without_na$steps ~ data_without_na$interval + data_without_na$day_type, data = data_without_na, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
steps_per_interval2 <- aggregate(steps ~ interval + dayType, data_without_na, mean)
steps_per_interval2 <- aggregate(steps ~ interval + day_type, data_without_na, mean)
xyplot(steps ~ interval | day_type, data = data_without_na, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
xyplot(steps ~ interval | day_type, data = steps_per_interval2, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekday days or weekend days)")
xyplot(steps ~ interval | day_type, data = steps_per_interval2, type = "l", lwd = 2,
layout = c(1, 2),
xlab = "5-minute interval",
ylab = "Average number of steps",
main = "Average Number of Steps Taken (across all weekddays or weekends)")
